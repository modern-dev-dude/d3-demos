import type { GetServerSideProps, NextPage } from "next";
import Head from "next/head";
import { NycDataItem, CountsByDateProps } from '../types';
import LineChart from '../components/charts/LineChart';

interface HomePageSsrProps {
  countsByDate: any;
}

const Home: NextPage<HomePageSsrProps> = ({ countsByDate }) => {

  return (
    <>
      <Head>
        <title>D3 Basic Line Chart</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="w-screen min-h-screen flex flex-col justify-center items-center p-4 overflow-y-scroll">
       
        <div className="grid grid-flow-row gap-4">
          <p className='text-2xl'>Charts with D3 and React</p>
        <div className="flex">
          <LineChart 
            countsByDate={countsByDate} 
            d3ContainerId ='itemOne'
            rootStyles={{
              width:'400px',
              height: '200px',
            }}
          />
          <LineChart 
            /**
             * This demonstrates multiple chards on one page
             * if you want to see why this is usefull, remove line 80 on ../components/charts/LineChart.tsx
             */
            countsByDate={countsByDate.map((item: CountsByDateProps) =>({
              ...item,
              count: Math.floor(Math.random() * 65) + 120
            }))} 
            d3ContainerId ='itemTwo'
            rootStyles={{
              width:'400px',
              height: '200px',
              padding:12
            }}
          />
          </div>
         </div>
      </main>
    </>
  );
};
export const getServerSideProps: GetServerSideProps = async (context) => {
  let countsByDate: Array<CountsByDateProps>  = [];
  let error = null;
  
  try {
    const DATA_URL = 'https://data.cityofnewyork.us/resource/tg4x-b46p.json';
    const res = await fetch(DATA_URL)
    const data: Array<NycDataItem> = await res.json();
    const filmPermits = data.filter(item =>item.eventtype === "Shooting Permit");
    const dates = [...new Set(filmPermits.map(item => item.enteredon.slice(0,10)))]

    countsByDate = dates.map(time =>{
        let date = time;
        let count = 0;
        filmPermits.forEach(item  =>{
            let timeStamp = item.enteredon.slice(0,10);
            if(timeStamp === date){
                count++;
            }
        })
        return {
            date,
            count
        }
    })
  } catch(err) {
      console.log(err)
      // Send to reporting servicfe when error
  }
  return {
    props: {
        countsByDate,
        error
    }, 
  }
}


export default Home;
